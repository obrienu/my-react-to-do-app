{"version":3,"sources":["Component/Form.js","Component/List.js","Component/Header.js","Component/Ui.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","state","todo","handleChange","bind","handleSubmit","evt","this","setState","target","name","value","trimStart","preventDefault","addTodo","id","onSubmit","placeholder","type","onChange","required","Component","List","handleDelete","handleToggle","handleEdit","delete","toggle","edit","setEditContent","update","list","className","clicked","undefined","onClick","clickEdit","Header","Ui","handleAddTodo","handleEditContent","handleUpdate","val","newTodo","uuid","isClicked","requestEdit","curState","todoId","map","a","filter","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7089ee1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Form extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            todo : \"\"\r\n        }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name] : evt.target.value.trimStart()\r\n        })\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault()\r\n        this.props.addTodo(this.state)\r\n        this.setState({\r\n            todo : \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"form\">\r\n                <form  onSubmit={this.handleSubmit}>\r\n                    <input id=\"todo\" \r\n                    placeholder=\"Enter New Todo\"\r\n                    name=\"todo\"\r\n                    value={this.state.todo}\r\n                    type=\"text\"\r\n                    onChange = {this.handleChange}\r\n                    required\r\n                    />\r\n                    <button type=\"submit\">Add to List</button>\r\n                </form>            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\n\r\nexport class List extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    this.handleDelete = this.handleDelete.bind(this)\r\n    this.handleToggle = this.handleToggle.bind(this)\r\n    this.handleEdit = this.handleEdit.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleDelete(){\r\n        this.props.delete(this.props.id)\r\n    }\r\n\r\n    handleToggle(){\r\n        this.props.toggle(this.props.id)\r\n    }\r\n\r\n    handleEdit(){\r\n        this.props.edit(this.props.id)\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.props.setEditContent(this.props.id, evt.target.value)\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault()\r\n        this.props.update(this.props.id)\r\n    }\r\n\r\n    render() {\r\n\r\n        const edit = \r\n        <div id=\"form\">\r\n            <form  onSubmit={this.handleSubmit}>\r\n                <input id=\"todo\" \r\n                placeholder=\"Edit Todo\"\r\n                name=\"todo\"\r\n                value={this.props.todo}\r\n                type=\"text\"\r\n                onChange = {this.handleChange}\r\n                required\r\n                />\r\n                <button type=\"submit\">Edit Todo</button>\r\n            </form>\r\n        </div>\r\n\r\n    const list = <div className=\"List\">\r\n        <p className = {this.props.clicked ? \"strike\" : undefined} onClick={this.handleToggle} >{this.props.todo}</p>\r\n        <span onClick={this.handleEdit}><i className=\"fas fa-pen\"></i></span> \r\n        <span onClick={this.handleDelete}><i className=\"far fa-trash-alt\"></i></span>\r\n    </div>\r\n    \r\n        return (\r\n            (this.props.clickEdit) ? edit : list\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Header\">\r\n                <h1>Todo List!</h1>\r\n                <p>A Simple React Todo List App</p>\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport Form from './Form';\r\nimport List from './List';\r\nimport Header from './Header';\r\nimport uuid from 'uuid';\r\n\r\nexport class Ui extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            todo : []\r\n        }\r\n    this.handleAddTodo = this.handleAddTodo.bind(this)\r\n    this.handleDelete = this.handleDelete.bind(this)\r\n    this.handleToggle = this.handleToggle.bind(this)\r\n    this.handleEdit = this.handleEdit.bind(this)\r\n    this.handleEditContent = this.handleEditContent.bind(this)\r\n    this.handleUpdate = this.handleUpdate.bind(this)\r\n    }\r\n\r\nhandleAddTodo(val){\r\n    let newTodo = {...val, id: uuid(), isClicked: false, requestEdit: false}\r\n    this.setState(curState => ({\r\n        todo: [...curState.todo, newTodo]\r\n    }))\r\n}\r\n\r\nhandleUpdate(todoId){\r\n    this.setState(curState => ({\r\n        todo: curState.todo.map(a => {\r\n            if(a.id === todoId){\r\n                a.isClicked = false\r\n                a.requestEdit = false\r\n                return a\r\n            }else return a\r\n        })\r\n    }))\r\n}\r\n\r\n\r\nhandleDelete(todoId){\r\n    this.setState(curState => ({\r\n        todo : curState.todo.filter(a => (a.id !== todoId))\r\n    }))\r\n}\r\n\r\nhandleToggle(todoId){\r\n    this.setState(curState => ({\r\n        todo : curState.todo.map(a => {\r\n            if(a.id === todoId){\r\n                a.isClicked = (!a.isClicked)? true : false\r\n                return a\r\n            }else return a\r\n        } )\r\n    }))\r\n}\r\n\r\nhandleEditContent(todoId, newTodo){\r\n    this.setState(curState => ({\r\n        todo : curState.todo.map( a => {\r\n            if(a.id === todoId){\r\n                a.todo = newTodo\r\n                return a\r\n            }else return a \r\n        })\r\n    }))\r\n}\r\n\r\nhandleEdit(todoId){\r\n    this.setState(curState => ({\r\n        todo : curState.todo.map(a => {\r\n            if(a.id === todoId){\r\n                a.requestEdit = (!a.requestEdit)? true : false\r\n                return a\r\n            }else return a\r\n        } )\r\n    }))\r\n}\r\n\r\n    render() {\r\n    const list = this.state.todo.map(a => <List clicked = {a.isClicked} todo = {a.todo} id={a.id} key={a.id}\r\n        toggle = {this.handleToggle} edit = {this.handleEdit}  delete={this.handleDelete}  clickEdit = {a.requestEdit}\r\n        setEditContent = {this.handleEditContent} update = {this.handleUpdate} />)\r\n        return (\r\n            <div className= \"Ui\">\r\n                <Header />\r\n                {list}\r\n                <Form addTodo = {this.handleAddTodo} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ui;\r\n","import React from 'react';\nimport './App.css';\nimport Ui from './Component/Ui';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Ui />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}